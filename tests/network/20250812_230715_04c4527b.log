
Received Task:
Use the undirected network in `edges.csv`.

Return a JSON object with keys:
- `edge_count`: number
- `highest_degree_node`: string
- `average_degree`: number
- `density`: number
- `shortest_path_alice_eve`: number
- `network_graph`: base64 PNG string under 100kB
- `degree_histogram`: base64 PNG string under 100kB

Answer:
1. How many edges are in the network?
2. Which node has the highest degree?
3. What is the average degree of the network?
4. What is the network density?
5. What is the length of the shortest path between Alice and Eve?
6. Draw the network with nodes labelled and edges shown. Encode as base64 PNG.
7. Plot the degree distribution as a bar chart with green bars. Encode as base64 PNG.

--- Attachments ---
Available files for use in your Python code:
1. edges.csv — application/octet-stream — 86 bytes — saved at tmp/edges_20250812_230715.csv

--- Metadata Code ---
import pandas as pd

metadata_list = []

# Source 1: edges.csv
csv_path = 'tmp/edges_20250812_230715.csv'
try:
    df = pd.read_csv(csv_path)
    metadata_summary = f"Column names: {list(df.columns)}\n\n"
    metadata_summary += "First 5 rows:\n"
    metadata_summary += df.head(5).to_string()
    metadata_list.append({"source": csv_path, "metadata": metadata_summary})
except Exception as e:
    metadata_list.append({"source": csv_path, "metadata": f"Error reading CSV: {e}"})

print(metadata_list)

--- Extracted Metadata ---

[{'metadata': "Column names: ['source', 'target']\n"
              '\n'
              'First 5 rows:\n'
              '  source target\n'
              '0  Alice    Bob\n'
              '1  Alice  Carol\n'
              '2    Bob  Carol\n'
              '3    Bob  David\n'
              '4    Bob    Eve',
  'source': 'tmp/edges_20250812_230715.csv'}]

--- Initial Generated Code ---
import pandas as pd
import json
import io
import base64
import matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt
import numpy as np

# Initialize result and error_list
result = {}
error_list = []

# File path
edges_file_path = 'tmp/edges_20250812_230715.csv'

# Initialize variables to None or default values
df = pd.DataFrame(columns=['source', 'target'])
edge_count = 0
nodes = set()
adj_list = {}
degree_map = {}
num_nodes = 0
highest_degree_node = None
average_degree = None
density = None
shortest_path_alice_eve = None

# 1. Load data and basic edge count
try:
    df = pd.read_csv(edges_file_path)
    edge_count = len(df)
    result['edge_count'] = int(edge_count)
except Exception as e:
    error_list.append(f"Error loading data or counting edges: {e}")
    result['edge_count'] = None

# Prepare graph structure for manual calculations
try:
    for index, row in df.iterrows():
        source, target = str(row['source']), str(row['target']) # Ensure string type
        nodes.add(source)
        nodes.add(target)

        if source not in adj_list:
            adj_list[source] = []
        if target not in adj_list:
            adj_list[target] = []

        # Undirected graph: add edge in both directions
        adj_list[source].append(target)
        adj_list[target].append(source)

    num_nodes = len(nodes)

except Exception as e:
    error_list.append(f"Error building adjacency list: {e}")

# 2. Which node has the highest degree?
try:
    degree_map = {node: len(neighbors) for node, neighbors in adj_list.items()}

    if degree_map:
        highest_degree_node = max(degree_map, key=degree_map.get)
        result['highest_degree_node'] = str(highest_degree_node)
    else:
        result['highest_degree_node'] = None
except Exception as e:
    error_list.append(f"Error calculating highest degree node: {e}")
    result['highest_degree_node'] = None

# 3. What is the average degree of the network?
try:
    total_degree_sum = sum(degree_map.values())
    if num_nodes > 0:
        average_degree = total_degree_sum / num_nodes
        result['average_degree'] = float(average_degree)
    else:
        result['average_degree'] = 0.0
except Exception as e:
    error_list.append(f"Error calculating average degree: {e}")
    result['average_degree'] = None

# 4. What is the network density?
try:
    # Density for undirected graph: 2 * E / (V * (V - 1))
    if num_nodes > 1:
        density = (2 * edge_count) / (num_nodes * (num_nodes - 1))
        result['density'] = float(density)
    elif num_nodes == 1 and edge_count == 0:
        result['density'] = 0.0
    else:
        result['density'] = 0.0
except Exception as e:
    error_list.append(f"Error calculating network density: {e}")
    result['density'] = None

# 5. What is the length of the shortest path between Alice and Eve?
def bfs_shortest_path(graph, start, end):
    if start not in graph or end not in graph:
        return -1 # One or both nodes not in graph

    queue = [(start, 0)] # (node, distance)
    visited = {start}

    while queue:
        current_node, distance = queue.pop(0)

        if current_node == end:
            return distance

        for neighbor in graph.get(current_node, []):
            if neighbor not in visited:
                visited.add(neighbor)
                queue.append((neighbor, distance + 1))
    return -1 # Path not found

try:
    shortest_path_alice_eve = bfs_shortest_path(adj_list, 'Alice', 'Eve')
    result['shortest_path_alice_eve'] = int(shortest_path_alice_eve)
except Exception as e:
    error_list.append(f"Error calculating shortest path between Alice and Eve: {e}")
    result['shortest_path_alice_eve'] = -1

# 6. Draw the network graph
try:
    fig, ax = plt.subplots(figsize=(6, 6), dpi=75)
    ax.set_aspect('equal')

    if nodes:
        node_list = list(nodes)
        num_nodes_plot = len(node_list)
        
        # Simple circular layout for nodes
        angles = np.linspace(0, 2 * np.pi, num_nodes_plot, endpoint=False)
        radius = 1.0

        node_positions = {
            node_list[i]: (radius * np.cos(angles[i]), radius * np.sin(angles[i]))
            for i in range(num_nodes_plot)
        }

        # Draw nodes
        node_x = [pos[0] for pos in node_positions.values()]
        node_y = [pos[1] for pos in node_positions.values()]
        ax.scatter(node_x, node_y, s=1000, c='lightblue', edgecolor='black', zorder=2)

        # Draw edges
        for index, row in df.iterrows():
            source, target = str(row['source']), str(row['target'])
            if source in node_positions and target in node_positions: # Ensure nodes exist in positions map
                x1, y1 = node_positions[source]
                x2, y2 = node_positions[target]
                ax.plot([x1, x2], [y1, y2], 'gray', alpha=0.6, linewidth=1, zorder=1)

        # Add node labels
        for node, (x, y) in node_positions.items():
            ax.text(x, y, node, ha='center', va='center', fontsize=9, zorder=3)

    ax.set_title("Network Graph")
    ax.set_xticks([])
    ax.set_yticks([])
    ax.set_frame_on(False)

    plt.tight_layout()
    buf = io.BytesIO()
    plt.savefig(buf, format='png', bbox_inches='tight', pad_inches=0.1)
    plt.close(fig)
    network_graph_base64 = base64.b64encode(buf.getvalue()).decode('utf-8')
    result['network_graph'] = network_graph_base64
except Exception as e:
    error_list.append(f"Error drawing network graph: {e}")
    result['network_graph'] = None

# 7. Plot the degree distribution as a bar chart with green bars.
try:
    degrees = list(degree_map.values())
    if degrees:
        degree_series = pd.Series(degrees)
        degree_counts = degree_series.value_counts().sort_index()

        fig, ax = plt.subplots(figsize=(6, 4), dpi=75)
        ax.bar(degree_counts.index, degree_counts.values, color='green')
        ax.set_title('Degree Distribution')
        ax.set_xlabel('Degree')
        ax.set_ylabel('Number of Nodes')
        ax.set_xticks(degree_counts.index)

        plt.tight_layout()
        buf = io.BytesIO()
        plt.savefig(buf, format='png', bbox_inches='tight')
        plt.close(fig)
        degree_histogram_base64 = base64.b64encode(buf.getvalue()).decode('utf-8')
        result['degree_histogram'] = degree_histogram_base64
    else:
        result['degree_histogram'] = None
except Exception as e:
    error_list.append(f"Error plotting degree histogram: {e}")
    result['degree_histogram'] = None

▶️ Attempt 1 at executing the code...


✅ Final result:
{"edge_count": 7, "highest_degree_node": "Bob", "average_degree": 2.8, "density": 0.7, "shortest_path_alice_eve": 2, "network_graph": "", "degree_histogram": "iVBORw0KGgoAAAANSUhEUgAAAboAAAEkCAYAAABZm/S2AAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjMsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvZiW1igAAAAlwSFlzAAALiQAAC4kBN8nLrQAAKPpJREFUeJzt3Xt0FGWexvFv5yZgCJeAhNAdRcKtG7CBgAoRUAdEhTFkQZEFuaQFNR5YxwsijojDuDpednSMs2qicSbCLhiNMKKII8Fw0QEhg0MgGgZIGhARAgEFknRq/+BYaw8QGpMioXg+5/QxVe9b1b+iYj95q6qrHIZhGIiIiNhUWEMXICIiYiUFnYiI2JqCTkREbE1BJyIitqagExERW1PQiYiIrSnoRGzgySef5Pbbb7dsfQ6Hg8LCwnpb/1tvvcWAAQPqbX0itXHoe3RiV0OGDGHt2rVERUURFhaGy+Xihhtu4OGHH6Zt27YNXV7IHA4HTZs2JSIigoiICLp27cptt91Geno6kZGRZ7Wuxx9/nMLCQvLy8s66ho0bN+L1es9qOYD8/HxSUlI4ePDgWS8rUh80ohNbe/rppzl8+DAHDx5k4cKF7Nq1i759+7J3715L3q+qqsqS9a5Zs4aKigr27t3LU089xZtvvsnIkSOx4u9Uq7ZBpKEo6OSC4HA4cLvd5OTkEBMTw3PPPWe2bdiwgWuvvZbWrVuTmJjIa6+9ZrbV1NTw6KOP0q5dO+Lj48nIyKBly5bk5+cDJ0ZII0aM4O6776Z169Y8/PDDGIbBiy++SLdu3WjZsiVDhgxhy5Yt5jqPHDnCvffeS0JCApdccgl33HEHhw4dCmk7IiMjGTx4MO+88w4rV67kgw8+MOtISUkBwDAMZs6cSVxcHDExMXTp0oW//OUv5OXl8eSTT/KXv/yF6OhooqOjAZg0aRJpaWnceuutxMTE8N///d9B6/vRypUr6dq1Ky1btuS2224za87Pz6dly5ZBfVNSUnj88cfZv38/N954I4cOHTLfs6CggOzs7KDR4d69e7n11ltp27YtCQkJzJ49m+rq6qD1Z2Zm4nK5iI2N5aGHHgrp30sEFHRygYmIiCAlJYWVK1cC8M033zB06FDuvvtu9u3bR15eHnPmzOGvf/0rAG+88QZvvfUWBQUFbNu2jQ0bNnD48OGgdX744YdceeWVfPvtt/zmN7/hj3/8I1lZWSxZsoTvvvuO1NRURo4cSWVlJQBTpkzhwIEDbNq0ie3bt1NVVcW99957VtvRsWNH+vbta27HTy1fvpz58+ezYcMGKioq+Pjjj+nSpQspKSk88sgjjBgxgiNHjnDkyBFzmQULFpCWlsbBgwdJS0s75Xv++c9/ZsWKFezYsYPy8nL+4z/+44x1xsbG8sEHH9CiRQvzPa+55pqT+o0bN47IyEi2b99OQUEBeXl5/O53vzPbDx8+TFFREV9//TWrVq0iIyPD/GND5EwUdHLB6dChAwcOHABOfHgPGjSIW2+9lfDwcHr06MHkyZOZP38+APPnzyc9PZ0uXbrQtGlTnnrqKWpqaoLW16NHDyZNmkRERATNmjUjIyODJ554gs6dOxMREcH06dM5evQon3/+Ofv27SM3N9ccGV588cU88cQT/O///i+BQOBnb8dPRUZGcuzYMTZv3kxVVRUJCQl06dKl1nUNGzaMG264gbCwMJo1a3bKPg899BDx8fG0bNmS3/zmN8yfP/+kf4ufY9euXXzyySc8//zzREdHc+mllzJ79myys7PNPoZhMG/ePJo0aUL37t0ZMGAAX3zxRZ3fWy4MEQ1dgMi5tmvXLlq3bg3Ajh07WLp0adCht0AgYI46du/ejcvlMtvatm1LkyZNgtaXkJAQNL1jxw7Gjx9PeHi4Oa+yshK/30+TJk2oqamhY8eOQcuEhYXxzTff0KFDh7Pajssuu+yk+ddeey1z587l17/+NVu2bOEXv/gFzz777EnvWds2nMqll14a9HNlZSX79u0Lud7T+fHfpV27dua8yy+/HL/fb07HxMQEBfDFF1980sha5HQ0opMLSnV1Ne+99x5DhgwBwOVyMWrUKA4ePGi+Dh8+zNKlSwGIj4+nrKzMXH7fvn0cO3YsaJ1hYcH/G7lcLhYtWhS0zh9++IHbb78dl8tFWFgYu3fvDmo/duzYWYXcjh07+OKLL8zt+Ff33HMPn332GaWlpVx00UVMnz79lLWebhtOZefOnebPpaWlREVF0bZtW6Kjozl69GjQhTF79uwJed1Op5Njx44FXSC0Y8cOnE7nGWsSCYWCTi4YW7duZeLEiRw6dIhf/epXAEyYMIFPPvmE3NxcqqqqqKqqorCwkHXr1gFw++238/LLL1NSUsLRo0d55JFHzvjBnZ6ezmOPPUZxcTEAFRUVvPfeexw+fJi4uDhSUlK49957+e6774AT5wnffffdkLahqqqKgoIC/u3f/o3BgwczfPjwk/qsW7eONWvWUFlZSdOmTbn44ouJiDhx8KZdu3bs3LnTvNDjbDzzzDNmQD/22GOMHTuWsLAwunTpQmRkJPPnzycQCLBgwQI2btxoLteuXTsOHz7Mt99+e8r1dujQgWuvvZYHHniA77//ntLSUn77298yceLEs65R5FQUdGJrM2fOpHnz5rRo0YLU1FTi4uJYv369eZisQ4cOLFu2jFdeeYX27dvTrl070tPTqaioAE5cODJ27FgGDBhAp06d8Hq9NGnShIsuuui073nvvfcyadIkUlNTiYmJoXv37uY5P4Ds7GxatmxJv379iImJ4Zprrjnj+aYBAwbQvHlzLrnkEh588EHGjx/PkiVLcDgcJ/WtqKjgnnvuITY2lri4OHbv3s0LL7wAwJgxY4iJiaFt27YnXSl5JuPHj+faa6/l0ksvpXnz5uY6Y2JieO2113j44YeJjY1l9erV3HDDDeZyXbt2JS0tDbfbTcuWLVm1atVJ654/fz5Hjx7l0ksvZeDAgdx88826slLqjb4wLnIW9uzZQ3x8PH6//6wONYpIw9GITqQW1dXV5OXlUVVVZV5SP2DAAIWcyHlEQSdSC8MweOqpp4iNjaVTp058//33QYchRaTx06FLERGxNY3oRETE1hR0IiJia7a7M0pMTIy+aCoicoHx+/3m14L+le2Czul0UlRU1NBliIjIOeR2u0/bpkOXIiJiawo6ERGxNQWdiIjYmoJORERsTUEnIiK2pqATERFbszToysrKuP766+nevTsej4dZs2adsl9+fj4ej4fExER8Ph+BQAA4cUPdyZMnk5iYiMfjoaCgwMpyRUTEhiwNuoiICJ5++mm2bNnCxo0bWbVqFe+9915Qn5qaGnw+H4sWLaKkpISKigpycnKAE8/tOn78OCUlJSxYsIC0tDR0a04RETkblgZd+/btSUpKAiAqKorevXtTWloa1GfdunXEx8ebX/ZLS0sjNzcXgNzcXHw+HwC9evUiNjY26MnFIiIiZ3LO7oxy4MAB8vLy+Oijj4Lm+/1+XC6XOZ2QkEBZWVmtbX369DHnZWRkkJGRYU6Xl5fXS72OuSc/uVkahjHH+lG89nfjcS72t1xYzsnFKJWVlYwePZoZM2bQrVu3oLbaDkWGcpgyPT2doqIi89WqVas61ysiIvZhedAFAgHGjRuH1+vl/vvvP6nd5XKZIziA0tJS86bMtbWJiIiEwvKgmzp1Ks2bN+e55547ZXtSUhJ+v9+8EXNWVhapqakApKamkpmZCcCmTZvYt29f0GFLERGRM7E06FavXs3rr7/O+vXr6d27N16vlxdffJH169dz0003ARAeHk5mZiajR4+mU6dOREdHM2HCBAAmTZpEZGQkiYmJjB07lqysLBwOnUsREZHQOQybXa/vdrvr5TE9ujih8dDFKBcWXYwiP0dtn/26M4qIiNiagk5ERGxNQSciIramoBMREVtT0ImIiK0p6ERExNYUdCIiYmsKOhERsTUFnYiI2JqCTkREbE1BJyIitqagExERW1PQiYiIrSnoRETE1hR0IiJiawo6ERGxNQWdiIjYmoJORERszdKgmzFjBk6nk4iIiFO2f/vtt3i9XvMVFxfHqFGjAMjPz6d58+Zm24/zRUREzsapE6iejBkzhlmzZuF0Ok/Zfskll1BYWGhO/+IXv2DMmDHm9JVXXsnHH39sZYkiImJzlgZdcnJyyH13797N+vXrWbx4sYUViYjIhabRnKNbsGABKSkpNGvWzJz3xRdf0Lt3bwYNGsSyZcsasDoRETlfWTqiOxs5OTk888wz5nSfPn3YuXMnMTExbN68meHDh/Ppp5/SsWPHoOUyMjLIyMgwp8vLy89ZzSIi0vg1ihFdUVER+/bt47rrrjPnxcTEEBMTA4DH42HgwIFs2LDhpGXT09MpKioyX61atTpndYuISOPXKILuz3/+M+PGjSMs7P/L2bNnD4ZhALBr1y7Wrl2Lx+NpqBJFROQ8ZWnQTZs2DafTSSAQwOl0kp6ezvr167npppvMPoZhMH/+fMaPHx+0bG5uLj169MDr9XLzzTczb948unXrZmW5IiJiQw7jx2GTTbjdboqKiuq8HsdcRz1UI/XBmGP9r6j2d+NxLva32E9tn/2N4tCliIiIVRR0IiJiawo6ERGxNQWdiIjYmoJORERsTUEnIiK2pqATERFbU9CJiIitKehERMTWFHQiImJrCjoREbE1BZ2IiNiagk5ERGxNQSciIramoBMREVtT0ImIiK0p6ERExNYUdCIiYmuWBt2MGTNwOp1EREScts9ll12Gx+PB6/Xi9Xr58ssvzbaHH36YxMREunTpQm5urpWlioiITZ0+gerBmDFjmDVrFk6ns9Z+y5YtO6nPxx9/zJo1ayguLuabb77h6quv5oYbbiA6OtrKkkVExGYsHdElJycTFxf3s5bNzc1l0qRJhIeH06FDBwYOHMhHH31UzxWKiIjdNYpzdCNHjsTr9TJ79myqqqoA8Pv9uFwus09CQgJlZWUNVaKIiJynGjzoCgoK2LhxI6tXr6a4uJhnn30WAMMwQlo+IyMDt9ttvsrLy60sV0REzjMNHnQ/jtouvvhifD4fa9asMef/dARXWlp6ynN96enpFBUVma9WrVqdm8JFROS80KBB9/3331NRUQFAIBAgNzeXXr16AZCamkp2djaBQIBdu3axatUqhg0b1pDliojIecjSoJs2bRpOp5NAIIDT6SQ9PZ3169dz0003AbB3714GDRpEr1696NWrF4ZhMHv2bACGDh3KVVddRZcuXRgyZAjPP/88zZs3t7JcERGxIYcR6smw84Tb7aaoqKjO63HMddRDNVIfjDnW/4pqfzce52J/i/3U9tkf0ohu3bp1/PDDDwAsWrSImTNnsmvXrvqrUERExCIhBV1aWhpNmjShuLiYxx9/nJYtWzJx4kSraxMREamzkIIuIiKCsLAwlixZwj333MOsWbM4cOCA1bWJiIjUWUhBFxYWxueff87ChQvNKx8rKystLUxERKQ+hBR0v//973nyyScZO3YsnTt3pqSkhCFDhlhcmoiISN2FdFPn5ORkkpOT2bdvHwCJiYm89NJLlhYmIiJSH0Ia0X366ad06tSJpKQkADZu3IjP57O0MBERkfoQUtA98MAD5Ofn07p1awB69+7NZ599ZmlhIiIi9SHkO6P89EkCQK0PUxUREWksQgq6du3asWXLFhyOE3ePeOONN0hISLC0MBERkfoQ0rAsIyODKVOmUFRURGxsLB6Ph5ycHKtrExERqbOQgi4hIYGPP/6Y77//npqaGt1cWUREzhu1Bt38+fNrXXjcuHH1WoyIiEh9qzXoli9fDsC+fftYtWoV1113HQArVqwgOTlZQSciIo1erUH3xhtvADB8+HD+8Y9/mE/43rVrl75HJyIi54WQrrosLS01Qw6gQ4cO7Ny507KiRERE6ktIF6MkJSUxfvx4xo8fD5w4d/fjXVJEREQas5CC7rXXXuPll1/m1VdfBWDw4MHcddddlhYmIiJSH0IKuosuuoj77ruPu+++G4AmTZpYWpSIiEh9Cekc3VdffcVVV12F0+nE6XQyYMAAvv766zMuN2PGDJxO52lvF1ZWVsb1119P9+7d8Xg8zJo1y2zLz8+nefPmeL1evF4vo0aNCnGTRERE/l9IQTd16lQeeughvvvuO7777jsefPBB7rzzzjMuN2bMGNavX3/a9oiICJ5++mm2bNnCxo0bWbVqFe+9957ZfuWVV1JYWEhhYSHvvvtuKKWKiIgECSnoDh48SGpqqjk9atQoDh48eMblkpOTiYuLO217+/btzYtaoqKi6N27N6WlpaGUJCIiEpKQgi4mJob333/fnF66dCkxMTH1WsiBAwfIy8tj6NCh5rwvvviC3r17M2jQIJYtW3bK5TIyMnC73earvLy8XusSEZHzm8MwDONMnYqKihg/fjy7du0CTjyy509/+hNutzukN4mIiKC6uvq07ZWVlQwfPpybb76Z+++/H4CKigrgRMhu3ryZ4cOH8+mnn9KxY8da38vtdlNUVBRSXbVxzHXUeR1SP4w5Z/wVrTPt78bjXOxvsZ/aPvtDuurS7XazYcMGKioqcDgc9XpT50AgwLhx4/B6vWbIAUEjRo/Hw8CBA9mwYcMZg05EROSnag26NWvW1LrwgAED6lzA1KlTad68Oc8991zQ/D179hAXF4fD4WDXrl2sXbuWxx9/vM7vJyIiF5Zag2727NknzXM4HGzbtg2/308gEKh15dOmTeP9998nEAjgdDq55ZZbmDx5Mo899hhLly5l9erVvP766/To0YPevXsDMGXKFKZPn05ubi5//OMfiYyMBGDevHl069bt526niIhcoEI6R/ejr776irlz5/LZZ58xa9asRnljZ52jsx+do7uw6Byd/By1ffaHdNXltm3buOOOO7jxxhsZMmQIxcXFjTLkRERE/lWtQffPf/6TyZMnM3ToUAYOHMjWrVu58847T3unExERkcam1sTq2rUrTqeTCRMmsH//fp555pmg9kceecTS4kREROrqjBejOBwnzl1UVVWdk4JERETqU61Bp8v5RUTkfBfSxSgiIiLnKwWdiIjYWq1B9+Mjc368x6WIiMj5ptage+KJJwAYOXLkOSlGRESkvtV6McpFF13EHXfcQVlZGVOnTj2p/dVXX7WsMBERkfpQa9AtWbKE5cuXs3LlSgYOHHiuahIREak3tQZdbGwsY8eO5fLLL6d///7nqiYREZF6E9JVl5dddhljx44lLi6OuLg4xo0bx7fffmt1bSIiInUWUtClpaXRv39/iouL+eqrr+jXrx9TpkyxujYREZE6CynoysrK+NWvfkWLFi2IiYnhvvvuw+/3W12biIhInYUUdJGRkfz97383pzdt2mQ+EFVERKQxC+l5O//1X//FyJEjad++PYZhsHfvXubPn291bSIiInUWUtAlJydTUlLC1q1bcTgcdO3alaioKKtrExERqbOQ73UZFRVFr1696NmzZ8ghN2PGDJxOZ60Pas3Pz8fj8ZCYmIjP5yMQCABQXV3N5MmTSUxMxOPxUFBQEGqpIiIiJktv6jxmzBjWr19/2vaamhp8Ph+LFi2ipKSEiooKcnJyAMjOzub48eOUlJSwYMEC0tLSMAzDynJFRMSGLA265ORk4uLiTtu+bt064uPjcbvdwImvMeTm5gKQm5uLz+cDoFevXsTGxrJx40YryxURERs6Y9AFAgGuv/56S97c7/fjcrnM6YSEBMrKys7YJiIiEqozXowSHh5OdXU1R48epWnTpvX65rUdigz1MGVGRgYZGRnmdHl5eZ3rEhF7c8x1NHQJ8hPGHGtPS4V01aXL5aJ///788pe/5OKLLzbnP/LII3V6c5fLFTRKKy0txel0BrV17tz5pLafSk9PJz093Zz+8TCoiIgIhHiOrnPnzowePZqoqCiqqqrMV10lJSXh9/spKioCICsri9TUVABSU1PJzMwETnxBfd++ffTp06fO7ykiIheWkEZ0c+bM+VkrnzZtGu+//z6BQACn08ktt9zC5MmTeeyxx1i6dCnh4eFkZmYyevRojh8/zuDBg5kwYQIAkyZNYtWqVSQmJhIVFUVWVhYOhw43iIjI2Qkp6DZv3kxaWhp79+5l+/btFBYW8s4775hPID+dV1555ZTzly5dav583XXXmSO6n4qMjOTNN98MpTwREZHTCunQ5d13381LL71Ey5YtAfB6vbzzzjtW1iUiIlIvQgq6o0ePkpSUFDRPN3UWEZHzQUhBFxMTw549e8xzZJ988gmtWrWytDAREZH6ENI5ut///vekpqZSUlJCnz59OHz4MHl5eRaXJiIiUnchBV3Pnj0pKCiguLgYwzDo1q1brTdqFhERaSxCTquPPvqIlStXAjBkyBBu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"}
total time taken to process (mins): 1.2991199999999998
